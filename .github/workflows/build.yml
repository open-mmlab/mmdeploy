name: build

on:
  push:
    paths-ignore:
      - 'demo/**'
      - 'tools/**'

  pull_request:
    paths-ignore:
      - 'demo/**'
      - 'tools/**'
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_cpu:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.7]
        torch: [1.8.0, 1.9.0]
        mmcv: [1.4.0]
        include:
          - torch: 1.8.0
            torch_version: torch1.8
            torchvision: 0.9.0
          - torch: 1.9.0
            torch_version: torch1.9
            torchvision: 0.10.0
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install PyTorch
        run: pip install torch==${{matrix.torch}}+cpu torchvision==${{matrix.torchvision}}+cpu -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install MMCV
        run: |
          pip install mmcv-full==${{matrix.mmcv}} -f https://download.openmmlab.com/mmcv/dist/cpu/${{matrix.torch_version}}/index.html
          python -c 'import mmcv; print(mmcv.__version__)'
      - name: Install unittest dependencies
        run: |
          pip install -r requirements.txt
          pip install -U numpy
      - name: Build and install
        run: rm -rf .eggs && pip install -e .
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmdeploy -m pytest -rsE tests
          coverage xml
          coverage report -m

  build_cuda102:
    runs-on: ubuntu-18.04
    container:
      image: pytorch/pytorch:1.9.0-cuda10.2-cudnn7-devel
    env:
      FORCE_CUDA: 1
    strategy:
      matrix:
        python-version: [3.7]
        torch: [1.9.0+cu102]
        mmcv: [1.4.0]
        include:
          - torch: 1.9.0+cu102
            torch_version: torch1.9
            torchvision: 0.10.0+cu102
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: |
          apt-get update && apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libxrender-dev python${{matrix.python-version}}-dev
          apt-get clean
          rm -rf /var/lib/apt/lists/*
      - name: Install PyTorch
        run: python -m pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install dependencies
        run: |
          python -V
          python -m pip install mmcv-full==${{matrix.mmcv}} -f https://download.openmmlab.com/mmcv/dist/cu102/${{matrix.torch_version}}/index.html
          python -m pip install -r requirements.txt
          python -m pip install -U numpy
      - name: Build and install
        run: |
          rm -rf .eggs && python -m pip install -e .
          python tools/check_env.py
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmdeploy -m pytest -rsE tests
          coverage xml
          coverage report -m

  build_cuda111:
    runs-on: ubuntu-18.04
    container:
      image: pytorch/pytorch:1.8.0-cuda11.1-cudnn8-devel

    strategy:
      matrix:
        python-version: [3.7]
        torch: [1.8.0+cu111]
        mmcv: [1.4.0]
        include:
          - torch: 1.8.0+cu111
            torch_version: torch1.8
            torchvision: 0.9.0+cu111

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install system dependencies
        run: |
          apt-get update && apt-get install -y ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libxrender-dev python${{matrix.python-version}}-dev
          apt-get clean
          rm -rf /var/lib/apt/lists/*
      - name: Install PyTorch
        run: python -m pip install torch==${{matrix.torch}} torchvision==${{matrix.torchvision}} -f https://download.pytorch.org/whl/torch_stable.html
      - name: Install dependencies
        run: |
          python -V
          python -m pip install mmcv-full==${{matrix.mmcv}} -f https://download.openmmlab.com/mmcv/dist/cu111/${{matrix.torch_version}}/index.html
          python -m pip install -r requirements.txt
          python -m pip install -U numpy
      - name: Build and install
        run: |
          rm -rf .eggs && python -m pip install -e .
          python tools/check_env.py
      - name: Run unittests and generate coverage report
        run: |
          coverage run --branch --source mmdeploy -m pytest -rsE tests
          coverage xml
          coverage report -m
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
