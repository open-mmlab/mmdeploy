name: backend-pplnn

on:
  push:
    paths-ignore:
      - "demo/**"
      - "tools/**"

  pull_request:
    paths-ignore:
      - "demo/**"
      - "tools/**"
      - "docs/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_pplnn:
    runs-on: [self-hosted, linux-3090]
    container:
      image: openmmlab/mmdeploy:ubuntu20.04-cuda11.3
      options: "--gpus=all --ipc=host"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Install dependencies
        run: |
          apt update && apt install unzip wget
          python3 -V
          python3 -m pip install openmim numpy
          python3 -m pip install -r requirements.txt
          python3 -m mim install $(cat requirements/codebases.txt | grep mmcls)
          python3 -m pip list
      - name: Build SDK
        run: |
          bash .circleci/scripts/linux/build.sh "cuda" "pplnn" \
              -Dpplcv_DIR=${pplcv_DIR} \
              -DTENSORRT_DIR=${pplnn_DIR} \
          ls build/lib
      - name: Install converter
        run: |
          rm -rf .eggs && python3 -m pip install -e .
          export LD_LIBRARY_PATH="/root/workspace/mmdeploy/build/lib:${LD_LIBRARY_PATH}"
          python3 tools/check_env.py
          python3 -c 'import mmdeploy.apis.pplnn as pplnn_api; assert pplnn_api.is_available()'
