name: golang_api

on:
  push:
    paths-ignore:
      - "tools/**"

  pull_request:
    paths-ignore:
      - "tools/**"
      - "docs/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test_rust_api:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: update
        run: sudo apt update
      - name: Install dependencies
        run: sudo apt install llvm-dev libclang-dev clang git-lfs
      - name: Install onnxruntime
        run: |
          wget https://github.com/microsoft/onnxruntime/releases/download/v1.8.1/onnxruntime-linux-x64-1.8.1.tgz
          tar -zxvf onnxruntime-linux-x64-1.8.1.tgz
          pushd onnxruntime-linux-x64-1.8.1
          popd
      - name: Install opencv
        run: sudo apt-get install libopencv-dev
      - name: Install mmdeploy with onnxruntime backend
        run: |
          mkdir -p build && pushd build
          export LD_LIBRARY_PATH=/home/runner/work/mmdeploy/mmdeploy/ncnn/install/lib/:$LD_LIBRARY_PATH
          cmake -DMMDEPLOY_BUILD_SDK=ON -DMMDEPLOY_BUILD_SDK_MONOLITHIC=ON -DMMDEPLOY_TARGET_BACKENDS=ort -DMMDEPLOY_CODEBASES=all -DONNXRUNTIME_DIR=~/work/mmdeploy/mmdeploy/onnxruntime-linux-x64-1.8.1  ..
          make install
          popd
      - name: Clone golang-mmdeploy
        run: git clone https://github.com/ueanperfect/mmdeploy-golang.git
      - name: Install converted models
        run: git clone https://github.com/liu-mengyang/mmdeploy-converted-models --depth=1
      - name: Test golang demo
        run: |
          pushd golang-mmdeploy
          export MMDEPLOY_DIR=/home/runner/work/mmdeploy/mmdeploy/build/install
          export LD_LIBRARY_PATH=$MMDEPLOY_DIR/lib:$LD_LIBRARY_PATH
          export ONNXRUNTIME_DIR=/home/runner/work/mmdeploy/mmdeploy/onnxruntime-linux-x64-1.8.1
          export LD_LIBRARY_PATH=$ONNXRUNTIME_DIR/lib:$LD_LIBRARY_PATH
          export LD_LIBRARY_PATH=$MMDEPLOY_DIR/lib:$LD_LIBRARY_PATH
          export LIBRARY_PATH=$MMDEPLOY_DIR/lib:$LIBRARY_PATH
          export CPATH=$MMDEPLOY_DIR/include:$CPATH
          #go mod download github.com/fogleman/gg
          go build examples/ImageClassification.go
          ./ImageClassification cpu ../mmdeploy-converted-models/resnet images/input_images/DemoImageClassification.png
          go build examples/ObjectDetection.go
          ./ObjectDetection cpu ../mmdeploy-converted-models/faster-rcnn-ort images/input_images/DemoObjectDetection.jpg
          go build examples/Segmentation.go
          ./Segmentation cpu ../mmdeploy-converted-models/deeplabv3 images/input_images/DemoSegmentation.png
          go build examples/PoseDetection.go
          ./PoseDetection cpu ../mmdeploy-converted-models/hrnet images/input_images/DemoPoseDetection.png
          go build examples/RotatedDetection.go
          ./RotatedDetection cpu ../mmdeploy-converted-models/retinanet images/input_images/DemoRotatedDetection.jpg
          go build examples/Ocr.go
          ./Ocr cpu ../mmdeploy-converted-models/dbnet ../mmdeploy-converted-models/crnn images/input_images/DemoOcr.jpg
          go build examples/Restorer.go
          ./Restorer cpu ../mmdeploy-converted-models/edsr images/input_images/DemoRestorer.png
#          cargo build
#          cargo run --example classifier cpu ../mmdeploy-converted-models/resnet ./images/demos/mmcls_demo.jpg
#          cargo run --example detector cpu ../mmdeploy-converted-models/faster-rcnn-ort ./images/demos/mmdet_demo.jpg
#          cargo run --example segmentor cpu ../mmdeploy-converted-models/deeplabv3 ./images/demos/mmseg_demo.png
#          cargo run --example pose_detector cpu ../mmdeploy-converted-models/hrnet ./images/demos/mmpose_demo.jpg
#          cargo run --example rotated_detector cpu ../mmdeploy-converted-models/retinanet ./images/demos/mmrotate_demo.jpg
#          cargo run --example ocr cpu ../mmdeploy-converted-models/dbnet ../mmdeploy-converted-models/crnn ./images/demos/mmocr_demo.jpg
#          cargo run --example restorer cpu ../mmdeploy-converted-models/edsr ./images/demos/mmediting_demo.png
