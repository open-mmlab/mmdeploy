globals:
  codebase_dir: ../mmediting
  checkpoint_force_download: False
  images:
    img_face: &img_face ../mmediting/tests/data/face/000001.png
    img_bg: &img_bg ../mmediting/tests/data/gt/baboon.png
  metric_info: &metric_info
    PSNR: # named after metafile.Results.Metrics
      metric_key: PSNR # eval log key name
      tolerance: 0.2 # metric ±n%
      dataset: Set5
    SSIM:
      metric_key: SSIM
      tolerance: 0.02 # metric ±n
      dataset: Set5
  convert_image: &convert_image
    input_img: *img_face
    test_img: *img_bg
  backend_test: &default_backend_test True
  sdk:
    sdk_dynamic: &sdk_dynamic configs/mmedit/super-resolution/super-resolution_sdk_dynamic.py

onnxruntime:
  pipeline_ort_static_fp32: &pipeline_ort_static_fp32
    convert_image: *convert_image
    deploy_config: configs/mmedit/super-resolution/super-resolution_onnxruntime_static.py

  pipeline_ort_dynamic_fp32: &pipeline_ort_dynamic_fp32
    convert_image: *convert_image
    deploy_config: configs/mmedit/super-resolution/super-resolution_onnxruntime_dynamic.py

tensorrt:
  pipeline_trt_static_fp32: &pipeline_trt_static_fp32
    convert_image: *convert_image
    backend_test: *default_backend_test
    sdk_config: *sdk_dynamic
    deploy_config: configs/mmedit/super-resolution/super-resolution_tensorrt_static-256x256.py

  pipeline_trt_static_fp16: &pipeline_trt_static_fp16
    convert_image: *convert_image
    backend_test: *default_backend_test
    sdk_config: *sdk_dynamic
    deploy_config: configs/mmedit/super-resolution/super-resolution_tensorrt-fp16_static-256x256.py

  pipeline_trt_static_int8: &pipeline_trt_static_int8
    convert_image: *convert_image
    backend_test: *default_backend_test
    sdk_config: *sdk_dynamic
    deploy_config: configs/mmedit/super-resolution/super-resolution_tensorrt-int8_static-256x256.py

  pipeline_trt_dynamic_fp32: &pipeline_trt_dynamic_fp32
    convert_image: *convert_image
    backend_test: *default_backend_test
    sdk_config: *sdk_dynamic
    deploy_config: configs/mmedit/super-resolution/super-resolution_tensorrt_dynamic-32x32-512x512.py

  pipeline_trt_dynamic_fp16: &pipeline_trt_dynamic_fp16
    convert_image: *convert_image
    backend_test: *default_backend_test
    sdk_config: *sdk_dynamic
    deploy_config: configs/mmedit/super-resolution/super-resolution_tensorrt-fp16_dynamic-32x32-512x512.py

  pipeline_trt_dynamic_int8: &pipeline_trt_dynamic_int8
    convert_image: *convert_image
    backend_test: *default_backend_test
    sdk_config: *sdk_dynamic
    deploy_config: configs/mmedit/super-resolution/super-resolution_tensorrt-int8_dynamic-32x32-512x512.py

openvino:
  pipeline_openvino_dynamic_fp32: &pipeline_openvino_dynamic_fp32
    convert_image: *convert_image
    backend_test: False
    deploy_config: configs/mmedit/super-resolution/super-resolution_openvino_dynamic-256x256.py

ncnn:
  pipeline_ncnn_dynamic_fp32: &pipeline_ncnn_dynamic_fp32
    convert_image: *convert_image
    backend_test: False
    deploy_config: configs/mmedit/super-resolution/super-resolution_ncnn_dynamic.py

pplnn:
  pipeline_pplnn_dynamic_fp32: &pipeline_pplnn_dynamic_fp32
    convert_image: *convert_image
    backend_test: False
    deploy_config: configs/mmedit/super-resolution/super-resolution_pplnn_dynamic-32x32.py

torchscript:
  pipeline_ts_fp32: &pipeline_ts_fp32
    convert_image: *convert_image
    backend_test: False
    deploy_config: configs/mmedit/super-resolution/super-resolution_torchscript.py

models:
  - name: SRCNN
    metafile: configs/restorers/srcnn/metafile.yml
    model_configs:
      - configs/restorers/srcnn/srcnn_x4k915_g1_1000k_div2k.py
    pipelines:
      - *pipeline_ts_fp32
      - *pipeline_ort_dynamic_fp32
#      - *pipeline_trt_dynamic_fp32
      - *pipeline_trt_dynamic_fp16
#      - *pipeline_trt_dynamic_int8
      - *pipeline_ncnn_dynamic_fp32
      - *pipeline_pplnn_dynamic_fp32
      - *pipeline_openvino_dynamic_fp32

  - name: ESRGAN
    metafile: configs/restorers/esrgan/metafile.yml
    model_configs:
      - configs/restorers/esrgan/esrgan_x4c64b23g32_g1_400k_div2k.py
      - configs/restorers/esrgan/esrgan_psnr_x4c64b23g32_g1_1000k_div2k.py
    pipelines:
      - *pipeline_ts_fp32
      - *pipeline_ort_dynamic_fp32
      - *pipeline_trt_dynamic_fp16
      - *pipeline_ncnn_dynamic_fp32
      - *pipeline_pplnn_dynamic_fp32
      - *pipeline_openvino_dynamic_fp32

  - name: SRGAN
    metafile: configs/restorers/srresnet_srgan/metafile.yml
    model_configs:
      - configs/restorers/srresnet_srgan/msrresnet_x4c64b16_g1_1000k_div2k.py
    pipelines:
      - *pipeline_ts_fp32
      - *pipeline_ort_dynamic_fp32
      - *pipeline_trt_dynamic_fp16
      - *pipeline_ncnn_dynamic_fp32
      - *pipeline_pplnn_dynamic_fp32
      - *pipeline_openvino_dynamic_fp32

  - name: Real-ESRNet
    metafile: configs/restorers/real_esrgan/metafile.yml
    model_configs:
      - configs/restorers/real_esrgan/realesrnet_c64b23g32_12x4_lr2e-4_1000k_df2k_ost.py
    pipelines:
      - *pipeline_ts_fp32
      - *pipeline_ort_dynamic_fp32
      - *pipeline_trt_dynamic_fp16
      - *pipeline_ncnn_dynamic_fp32
      - *pipeline_pplnn_dynamic_fp32
      - *pipeline_openvino_dynamic_fp32

  - name: EDSR
    metafile: configs/restorers/edsr/metafile.yml
    model_configs:
      - configs/restorers/edsr/edsr_x4c64b16_g1_300k_div2k.py
    pipelines:
      - *pipeline_ts_fp32
      - *pipeline_ort_dynamic_fp32
      - *pipeline_trt_dynamic_fp16
      - *pipeline_ncnn_dynamic_fp32
      - *pipeline_openvino_dynamic_fp32
